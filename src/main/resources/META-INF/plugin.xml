<idea-plugin>
    <id>com.blacknebula.TestCherry</id>
    <name>TestCherry</name>
    <version>3.16</version>

    <vendor email="benkhalfallahhazem@gmail.com"
            url="https://github.com/Hazem-Ben-Khalfallah/test-cherry">
        Hazem Ben Khalfallah
    </vendor>

    <!-- Upgrade this version to support newer version of intellij IDE
    please see: https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html#intellij-platform-based-products-of-recent-ide-versions-->
    <idea-version since-build="250" until-build="252.*"/>

    <description><![CDATA[
    <b>About</b>
    <br/>
    Test Cherry Plugin <img src="https://github.com/Hazem-Ben-Khalfallah/test-cherry/raw/master/src/main/resources/images/logo.png"> aides java developers with writing @should style test units.
It aims to make it easier to make TDD with a really cool and easy approach that consist in annotating interface method with desired behaviour
    <br/>
    <a href="https://github.com/Hazem-Ben-Khalfallah/test-cherry/raw/master/snapshots/cherryTest_image1.png"><img src="https://github.com/Hazem-Ben-Khalfallah/test-cherry/raw/master/snapshots/cherryTest_image1.png" width="800"></a>
    <br/>
    <br/>
    So with this plugin you could generate a test class for this interface like this one automatically:
    <br/>
    <a href="https://github.com/Hazem-Ben-Khalfallah/test-cherry/raw/master/snapshots/cherryTest_image2.png"><img src="https://github.com/Hazem-Ben-Khalfallah/test-cherry/raw/master/snapshots/cherryTest_image2.png" width="800"></a>
    <br/>
    Follow this link to get more details <a href="https://github.com/Hazem-Ben-Khalfallah/test-cherry/blob/master/README.md">https://github.com/Hazem-Ben-Khalfallah/test-cherry/blob/master/README.md</a>.
    <br/><br/>
    <b>Credits</b>
    <br/>
    This Project is based on <a href="https://github.com/hablutzel1/GenerateTestCases">GenerateTestCases</a> project.
  ]]></description>

    <change-notes><![CDATA[
        <ul>
            <li><b>3.18</b>: Support 252.* version</b>
            <li><b>3.17</b>: Support 242.* version</b>
            <li><b>3.16</b>: Specify plugin display name in settings. Move plugin config under <b>Settings > Tools</b>
            <li><b>3.15</b>: Remove  internal and scheduled for removal API usages
            <li><b>3.14</b>: Support build range 241.*
            <li><b>3.13</b>: Update platformVersion to 2023.3
            <li><b>3.12</b>: Update platformVersion to 2023.2
            <li><b>3.11</b>: Update platformVersion to 2023.1
            <li><b>3.10</b>: Update platformVersion to 2022.3
            <li><b>3.9</b>: Update platformVersion to 2022.2
            <li><b>3.8</b>: Update platformVersion to 2021.3
            <li><b>3.7</b>: Add support for IntelliJ IDEA version 2021.2
            <li><b>3.6</b>:
                <ul>
                    <li>Fix a NullPointerException that is thrown in IntelliJ Idea</li>
                    <li>Fix outOfBoundException when generating a test case</li>
                    <li>Add a comment tag for verifies to prevent the warnings</li>
                </ul>
            <li><b>3.5</b>: Support for snake case test cases generation
            <li><b>3.4</b>: Add support for IntelliJ IDEA version 2021.1
            <li><b>3.1</b>: fix multiple test method generation
            <li><b>3.0</b>:
                <ul>
                    <li>Add support to IntelliJ IDEA version 2020.3</li>
                    <li>Reduce deprecated methods usage</li>
                </ul>
        </ul>
    ]]></change-notes>

    <!-- Product and plugin compatibility requirements. Read more:
    https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.java</depends>

    <actions>
        <action id="com.blacknebula.testcherry.actions.GenerateTestMethods"
                class="com.blacknebula.testcherry.actions.GenerateTestMethods"
                text="Generate Test Methods"
                description="It generates BDD test methods for class">
            <add-to-group group-id="MainToolbarRight" anchor="first"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--for settings-->
        <projectConfigurable id="testcherry"
                             displayName="Test Cherry"
                             parentId="tools"
                             instance="com.blacknebula.testcherry.codeinsight.TestCherryConfigurable"/>

        <!--for inspections of missing test methods -->
        <inspectionToolProvider implementation="com.blacknebula.testcherry.inspection.BddInspectionsToolProvider"/>

        <!--for adding support for @should tag-->
        <javadocTagInfo implementation="com.blacknebula.testcherry.javadoc.ShouldTagInfo"/>

        <!--for adding support for @verifies tag-->
        <javadocTagInfo implementation="com.blacknebula.testcherry.javadoc.VerifiesTagInfo"/>

        <!--*****************************************************-->
        <!--for references with renaming support of PsiDocTag-->
        <!--*******************************************************-->

        <psi.referenceContributor implementation="com.blacknebula.testcherry.util.ReferenceContributor" language="JAVA"/>

        <!-- depending on a PsiElement type it suggest names (including the principal one) in the rename dialog-->
        <nameSuggestionProvider
                implementation="com.blacknebula.testcherry.refactor.ShouldDescriptionNameSuggestionProvider"/>

        <!-- rename element processor without support for inline renaming, -->
        <renamePsiElementProcessor
                implementation="com.blacknebula.testcherry.refactor.ShouldTagsAwareRenameProcessor" order="first"/>

        <!--********************************************-->
        <!--For listening to method renaming-->
        <!--**************************************-->
        <refactoring.elementListenerProvider
                implementation="com.blacknebula.testcherry.refactor.listener.TestMethodRefactoringElementListenerProvider"/>
    </extensions>

</idea-plugin>
